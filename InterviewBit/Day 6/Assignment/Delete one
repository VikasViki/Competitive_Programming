## Question

"""
Problem Description
Given an integer array A of size N. You have to delete one element such that the GCD(Greatest common divisor) of the remaining array is maximum.

Find the maximum value of GCD.


Problem Constraints
2 <= N <= 105
1 <= A[i] <= 109


Input Format
First argument is an integer array A.


Output Format
Return an integer denoting the maximum value of GCD.


Example Input
Input 1:
 A = [12, 15, 18]
Input 2:
 A = [5, 15, 30]
 


Example Output
Output 1:
 6
Output 2:
 15
 


Example Explanation
Explanation 1:
 
 If you delete 12, gcd will be 3.
 If you delete 15, gcd will be 6.
 If you delete 18, gcd will 3.
 Maximum vallue of gcd is 6.
Explanation 2:
 If you delete 5, gcd will be 15.
 If you delete 15, gcd will be 5.
 If you delete 30, gcd will be 5.
"""

## Solution

class Solution:
    # @param A : list of integers
    # @return an integer
    def gcd(self, A, B):
        while B:
            A, B = B, A%B
        return A
        
    def solve(self, A):
        A_length =  len(A)
        prefix_gcd = [0] * A_length
        suffix_gcd = [0] * A_length
        
        prefix_gcd[0] = A[0]
        for index in range(1, A_length):
            prefix_gcd[index] = self.gcd(prefix_gcd[index-1], A[index])
        
        suffix_gcd[-1] = A[-1]
        for index in range(A_length-2, -1, -1):
            suffix_gcd[index] = self.gcd(suffix_gcd[index+1], A[index])
        
        ele_to_remove = A[0]
        max_gcd = suffix_gcd[1]
        
        for index in range(1, A_length-1):
            temp_gcd = self.gcd(prefix_gcd[index-1], suffix_gcd[index+1])
            if temp_gcd > max_gcd:
                max_gcd = temp_gcd
                ele_to_remove = A[index]
        
        if prefix_gcd[-2] > max_gcd:
            max_gcd = prefix_gcd[-2]
            ele_to_remove = A[-1]
        
        # print(prefix_gcd)
        # print(suffix_gcd)
        # print(max_gcd, ele_to_remove)
        return max_gcd
